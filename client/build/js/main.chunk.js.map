{"version":3,"file":"js/main.chunk.js","sources":["C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Styles/home.css","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/index.css","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/App.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/AuthorizedRoute/AuthorizedRoute.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/AddHolding.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/Charts/HoldingsChart.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/Charts/StockInfoChart.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/CurrentHoldings.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/Headers/PortfolioHeader.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/Headers/TradeHeader.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/LogInForm.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/Modals/BuyStockModal.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/Modals/SellStockModal.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/NavBar.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/NoHoldings.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/RegisterForm.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/SelectHolding.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/ShowAlert.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Components/UserInformation.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Pages/Home.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Pages/Portfolio.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Pages/Trade.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/Pages/Welcome.js","webpack:///./src/Styles/home.css?8c7d","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/context/UserContext.js","webpack:///./src/index.css?f3f6","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/index.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/reportWebVitals.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/utilities/portfolioUtilities.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/src/utilities/tradingUtilities.js","C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/ignored C:/Users/spira/OneDrive/Documents/PersonalProjects/StockTrader/StockTrader/client/node_modules/object-inspect ./util.inspect"],"sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Noto+Sans+TC&family=Potta+One&display=swap);\"]);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap);\"]);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap);\"]);\n// Module\nexports.push([module.id, \"/* #home {\\r\\n  background: url('../images/stock-hero.jpg') no-repeat center center/cover;\\r\\n  height: 95vh;\\r\\n  position: relative;\\r\\n  padding: 40px;\\r\\n} */\\r\\n\\r\\n#home::before {\\r\\n  content: '';\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  background: rgba(0, 0, 0, 0.6);\\r\\n}\\r\\n\\r\\n#home * {\\r\\n  z-index: 10;\\r\\n}\\r\\n\\r\\n.home-card {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.home-content {\\r\\n  width: 80%;\\r\\n  margin: auto;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  padding: 0 20px;\\r\\n  font-size: 1.3rem;\\r\\n  color: #fff;\\r\\n  font-family: 'Open Sans', sans-serif;\\r\\n}\\r\\n\\r\\n.home-content p {\\r\\n  font-size: 1.5rem;\\r\\n  text-align: start;\\r\\n}\\r\\n\\r\\n#home h1 {\\r\\n  text-align: start;\\r\\n  font-family: 'Source Code Pro', monospace;\\r\\n}\\r\\n\\r\\n.home-buttons-wrapper .btn {\\r\\n  margin-right: 20px;\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n\\r\\n.home-header {\\r\\n  font-family: 'Open Sans', sans-serif;\\r\\n  font-weight: 600;\\r\\n}\\r\\n\\r\\n#home .col-logo {\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.home-container {\\r\\n  display: grid;\\r\\n  grid-template-columns: 2fr 1fr;\\r\\n}\\r\\n\\r\\n.home-card .card-body a {\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n}\\r\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\r\\n  margin: 0;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\r\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\r\\n    sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n  background-color: whitesmoke !important;\\r\\n}\\r\\n\\r\\ncode {\\r\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\r\\n    monospace;\\r\\n}\\r\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\r\nimport Home from './Pages/Home';\r\nimport NavBar from './Components/NavBar';\r\nimport Trade from './Pages/Trade';\r\nimport Portfolio from './Pages/Portfolio';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { UserContextProvider } from './context/UserContext';\r\nimport AuthorizedRoute from './AuthorizedRoute/AuthorizedRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <UserContextProvider>\r\n        <div className='app' id='app-container'>\r\n          <NavBar />\r\n          <main id='main-container'>\r\n            <Route path='/' exact component={Home} />\r\n            <AuthorizedRoute path='/trade' component={Trade} />\r\n            <AuthorizedRoute path='/portfolio' component={Portfolio} />\r\n          </main>\r\n        </div>\r\n      </UserContextProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst AuthorizedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (JSON.parse(localStorage.getItem('userData'))) {\r\n          return <Component />;\r\n        } else {\r\n          return (\r\n            <Redirect to={{ pathname: '/', state: { from: props.location } }} />\r\n          );\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthorizedRoute;\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport { searchForHolding } from '../utilities/tradingUtilities';\r\n\r\nconst AddHolding = (props) => {\r\n  const [symbol, setSymbol] = useState('');\r\n  const [companyName, setCompanyName] = useState(null);\r\n  const [isCanSearch, setCanSearch] = useState(false);\r\n  const timeoutRef = useRef(null);\r\n  const [isShowAlert, setShowAlert] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (symbol === '') {\r\n      setShowAlert(false);\r\n      setCompanyName(null);\r\n    }\r\n  }, [symbol]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.handleSearchForHolding(symbol);\r\n    setSymbol('');\r\n  };\r\n\r\n  const onSearchSymbol = (e) => {\r\n    setCanSearch(false);\r\n    setSymbol(e.target.value);\r\n  };\r\n\r\n  const performApiCall = useCallback(async () => {\r\n    try {\r\n      const response = await searchForHolding(symbol);\r\n      if (response === 'error') {\r\n        setShowAlert(true);\r\n      } else if (response) {\r\n        setShowAlert(false);\r\n        setCompanyName(response.companyName);\r\n      }\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  }, [symbol]);\r\n\r\n  useEffect(() => {\r\n    if (timeoutRef.current !== null) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n\r\n    if (isCanSearch && symbol) performApiCall();\r\n\r\n    timeoutRef.current = setTimeout(() => {\r\n      timeoutRef.current = null;\r\n      setCanSearch(true);\r\n    }, 2000);\r\n  }, [isCanSearch, performApiCall, symbol]);\r\n\r\n  return (\r\n    <>\r\n      <form\r\n        className='form-inline justify-content-center mt-3 selected-holding'\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <input\r\n          type='symbol'\r\n          value={symbol}\r\n          autoFocus\r\n          onChange={(e) => onSearchSymbol(e)}\r\n          className='form-control col-sm-5'\r\n          placeholder='Enter stock symbol'\r\n        />\r\n        <button\r\n          type='submit'\r\n          className='btn btn-primary col-sm-2'\r\n          disabled={!companyName}\r\n        >\r\n          Submit\r\n        </button>\r\n        <h6\r\n          className='w-100 text-center text-success'\r\n          style={{\r\n            display: symbol === '' ? 'none' : 'block'\r\n          }}\r\n        >\r\n          {companyName}\r\n        </h6>\r\n      </form>\r\n      {isShowAlert && (\r\n        <Alert\r\n          className='w-50 text-center m-auto'\r\n          variant='danger'\r\n          onClose={() => setShowAlert(false)}\r\n          dismissible\r\n        >\r\n          <strong className='text-uppercase'>{symbol}</strong> is not a valid\r\n          symbol. Please try modifying your search.\r\n        </Alert>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddHolding;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport { getHoldings } from '../../utilities/tradingUtilities';\r\n\r\nconst HoldingsChart = () => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [holdings, setHoldings] = useState([]);\r\n  const [holdingNames, setHoldingNames] = useState([]);\r\n  const [holdingShares, setHoldingShares] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getHoldingsData();\r\n  }, []);\r\n\r\n  const getHoldingsData = () => {\r\n    getHoldings()\r\n      .then((holdingsData) => setHoldings(holdingsData))\r\n      .catch((err) => console.error('error get holdings', err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; holdings.length > i; i++) {\r\n      setHoldingNames((prevState) => [...prevState, holdings[i].name]);\r\n      setHoldingShares((prevState) => [...prevState, holdings[i].shares]);\r\n    }\r\n  }, [holdings]);\r\n\r\n  useEffect(() => {\r\n    setChartData({\r\n      labels: holdingNames,\r\n      datasets: [\r\n        {\r\n          label: 'Population',\r\n          data: holdingShares,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.6)',\r\n            'rgba(54, 162, 235, 0.6)',\r\n            'rgba(255, 206, 86, 0.6)',\r\n            'rgba(75, 192, 192, 0.6)',\r\n            'rgba(153, 102, 255, 0.6)',\r\n            'rgba(255, 159, 64, 0.6)',\r\n            'rgba(255, 99, 132, 0.6)'\r\n          ]\r\n        }\r\n      ]\r\n    });\r\n  }, [holdingNames, holdingShares]);\r\n\r\n  return (\r\n    <div className='chart chart-portfolio'>\r\n      {holdingNames.length > 0 && (\r\n        <Pie\r\n          data={holdingNames.length > 0 ? chartData : null}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              fontSize: 15\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'right'\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoldingsChart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nconst StockInfoChart = ({ symbol }) => {\r\n  const [chartData, setChartData] = useState({});\r\n  const [holdingDays, setHoldingDays] = useState([]);\r\n  const [holdingPrices, setHoldingPrices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getHoldingPricesByDates = async () => {\r\n      try {\r\n        const response = await axios.get(`api/stocks/chart/?symbol=${symbol}`);\r\n        setDatesAndPricesStates(response.data);\r\n      } catch (err) {\r\n        console.error('error in getHoldingPricesByDates', err.message);\r\n      }\r\n    };\r\n    getHoldingPricesByDates();\r\n  }, [symbol]);\r\n\r\n  const setDatesAndPricesStates = (data) => {\r\n    for (let i = 0; data.length > i; i++) {\r\n      setHoldingDays((prevState) => [...prevState, data[i].label]);\r\n      setHoldingPrices((prevState) => [...prevState, data[i].close]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (holdingDays.length > 0) {\r\n      setChartData({\r\n        labels: holdingDays,\r\n        datasets: [\r\n          {\r\n            label: symbol,\r\n            data: holdingPrices,\r\n            backgroundColor: [\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)',\r\n              'rgba(255, 206, 86, 0.6)',\r\n              'rgba(75, 192, 192, 0.6)',\r\n              'rgba(153, 102, 255, 0.6)',\r\n              'rgba(255, 159, 64, 0.6)',\r\n              'rgba(255, 99, 132, 0.6)'\r\n            ]\r\n          }\r\n        ]\r\n      });\r\n    }\r\n  }, [holdingPrices, holdingDays, symbol]);\r\n\r\n  return (\r\n    <div className='chart'>\r\n      {holdingDays.length > 0 && (\r\n        <Line\r\n          data={holdingDays.length > 0 ? chartData : null}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              text: `Average Prices For ${symbol} last 10 business days`,\r\n              fontSize: 20\r\n            },\r\n            legend: {\r\n              display: true,\r\n              position: 'right'\r\n            },\r\n            scales: {\r\n              yAxes: [\r\n                {\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Price',\r\n                    fontSize: 15,\r\n                    fontStyle: 'italic'\r\n                  }\r\n                }\r\n              ],\r\n              xAxes: [\r\n                {\r\n                  scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Date',\r\n                    fontSize: 15,\r\n                    fontStyle: 'italic'\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockInfoChart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst CurrentHoldings = ({ holding }) => {\r\n  const [holdingStyleColor, setHoldingStyleColor] = useState('');\r\n  const [positiveSign, setPositiveSign] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const isHoldingNegativeOrPositive = () => {\r\n      if (String(percent_change).charAt(0) === '-') {\r\n        setHoldingStyleColor('red');\r\n        setPositiveSign(false);\r\n      } else {\r\n        setHoldingStyleColor('green');\r\n        setPositiveSign('+');\r\n      }\r\n    };\r\n    isHoldingNegativeOrPositive();\r\n  }, []);\r\n\r\n  const { name, symbol, price, percent_change, shares, created_at } = holding;\r\n\r\n  return (\r\n    <div className='selected-holding card mt-4'>\r\n      <div className='card-head'>\r\n        <h3>\r\n          {name}: {symbol}\r\n        </h3>\r\n        <div className='card-buttons'>\r\n          <Link to={{ pathname: '/main', search: `?symbol=${symbol}` }}>\r\n            <Button variant='primary' size='md'>\r\n              Trade\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n      <h6 className='ml-2'>Date purchased: {created_at}</h6>\r\n      <hr />\r\n      <div className='card-body'>\r\n        <div className='Holding Value:'>\r\n          <strong>Shares Total Value:</strong>\r\n          <p className={holdingStyleColor}>\r\n            ${Number(price * shares).toFixed(2)}\r\n          </p>\r\n        </div>\r\n        <div className='shares'>\r\n          <strong>Number Of Shares:</strong>\r\n          <p>{shares}</p>\r\n        </div>\r\n        <div className='last-price'>\r\n          <strong>Current Stock Value:</strong>\r\n          <p className={holdingStyleColor}>${price}</p>\r\n        </div>\r\n        <div className='percent-change'>\r\n          <strong>Percent Change:</strong>\r\n          <p className={holdingStyleColor}>\r\n            {positiveSign}\r\n            {percent_change}%\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentHoldings;\r\n","import React from 'react';\r\n\r\nconst PortfolioHeader = () => {\r\n  return (\r\n    <div className='text-center mt-3'>\r\n      <h2>Portfolio</h2>\r\n      <h6>\r\n        Each account starts with $10,000 fake dollars. Gamble responsibly.\r\n      </h6>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PortfolioHeader;\r\n","import React from 'react';\r\n\r\nconst HeaderTrade = () => {\r\n  return (\r\n    <div className='text-center mt-3' id='goup'>\r\n      <h2>Trading Page</h2>\r\n      <h6>Search stock symbols to trade. For example, type TSLA for Tesla.</h6>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeaderTrade;\r\n","import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst LoginForm = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [userName, setUserName] = useContext(UserContext);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const loginUser = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.get('/api/auth/login', {\r\n        params: {\r\n          email: email,\r\n          password: password\r\n        }\r\n      });\r\n      localStorage.setItem('userData', JSON.stringify(response.data));\r\n      setUserName(response.data.name);\r\n\r\n      props.history.push('/');\r\n    } catch (err) {\r\n      console.error('error in login user', err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button size='lg' onClick={handleShow} className='btn btn-primary'>\r\n        Login\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Login Form</Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={loginUser}>\r\n          <Form.Group controlId='formBasicEmail'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='formBasicPassword'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit'>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nimport { getWalletData } from '../../utilities/portfolioUtilities';\r\nimport Alert from 'react-bootstrap/Alert';\r\n\r\nconst BuyModal = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [sharesValue, setSharesValue] = useState('');\r\n  const [wallet, setWallet] = useState(0);\r\n  const [isShowAlert, setShowAlert] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchWalletData = () => {\r\n      getWalletData()\r\n        .then((res) => setWallet(res.wallet))\r\n        .catch((err) => console.error('error get wallet', err));\r\n    };\r\n    fetchWalletData();\r\n  }, []);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setShowAlert(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleSubmit = () => {\r\n    if (wallet > sharesValue * props.selectedHolding.latestPrice) {\r\n      handleClose();\r\n      props.handleBuyShares(sharesValue);\r\n    } else {\r\n      setShowAlert(true);\r\n    }\r\n  };\r\n\r\n  const { companyName, symbol, latestPrice } = props.selectedHolding;\r\n  return (\r\n    <Fragment>\r\n      <Button className='mr-2' variant='outline-primary' onClick={handleShow}>\r\n        Buy Stocks\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {companyName}: {symbol}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <h5 className='text-center'>Share value: ${latestPrice}</h5>\r\n            <h5 className='text-center'>Current Shares Held: {props.shares}</h5>\r\n            <Form.Group controlId='formBasicEmail'>\r\n              <Form.Label>Share quantity</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Shares'\r\n                value={sharesValue}\r\n                onChange={(e) => setSharesValue(e.target.value)}\r\n              />\r\n              <Form.Text className='total-price'>\r\n                {sharesValue\r\n                  ? '$' + (sharesValue * latestPrice).toFixed(2)\r\n                  : 'Total amount'}\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        {isShowAlert && (\r\n          <Alert\r\n            variant='danger'\r\n            onClose={() => setShowAlert(false)}\r\n            dismissible\r\n          >\r\n            You currently have only ${wallet.toFixed(2)}. Either sell some\r\n            shares or buy less in order to complete the transaction.\r\n          </Alert>\r\n        )}\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Cancel Order\r\n          </Button>\r\n          <Button variant='primary' onClick={handleSubmit}>\r\n            Buy Shares\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BuyModal;\r\n","import React, { useState, Fragment } from 'react';\r\nimport { Button, Modal, Form, Alert } from 'react-bootstrap';\r\n\r\nconst SellStockModal = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [isShowAlert, setShowAlert] = useState(false);\r\n  const [sharesInput, setSharesInput] = useState('');\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setShowAlert(false);\r\n  };\r\n  const handleShow = () => {\r\n    setShow(true);\r\n    setSharesInput('');\r\n  };\r\n  const handleSubmit = () => {\r\n    if (sharesInput > props.shares) {\r\n      setShowAlert(true);\r\n      setShow(true);\r\n    } else {\r\n      setShowAlert(false);\r\n      props.handleSellShares(sharesInput);\r\n    }\r\n  };\r\n\r\n  const { companyName, symbol, latestPrice } = props.selectedHolding;\r\n  return (\r\n    <Fragment>\r\n      <Button variant='secondary' onClick={handleShow}>\r\n        Sell Stocks\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n            {companyName}: {symbol}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <h5 className='text-center'>Share value: ${latestPrice}</h5>\r\n            <h5 className='text-center'>Current Shares Held: {props.shares}</h5>\r\n            <Form.Group controlId='formBasicEmail'>\r\n              <Form.Label> Share quantity</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Shares'\r\n                value={sharesInput}\r\n                onChange={(e) => setSharesInput(e.target.value)}\r\n              />\r\n              <Form.Text className='total-price'>\r\n                {sharesInput\r\n                  ? '$' + (sharesInput * latestPrice).toFixed(2)\r\n                  : 'Total amount'}\r\n              </Form.Text>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        {isShowAlert && (\r\n          <Alert\r\n            variant='danger'\r\n            onClose={() => setShowAlert(false)}\r\n            dismissible\r\n            className='alert'\r\n          >\r\n            <p> You don't own enough shares to make that transaction</p>\r\n          </Alert>\r\n        )}\r\n        <Modal.Footer>\r\n          <Button variant='secondary' onClick={handleClose}>\r\n            Cancel Order\r\n          </Button>\r\n          <Button\r\n            variant='primary'\r\n            onClick={() => {\r\n              handleClose();\r\n              handleSubmit();\r\n            }}\r\n          >\r\n            Sell Shares\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SellStockModal;\r\n","import React, { useContext } from 'react';\r\nimport { Navbar, Nav, Button } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { CgProfile } from 'react-icons/cg';\r\nimport { AiOutlineStock } from 'react-icons/ai';\r\n\r\nconst NavBar = (props) => {\r\n  const userName = useContext(UserContext);\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem('userData');\r\n    props.history.push('/');\r\n  };\r\n\r\n  return (\r\n    <Navbar bg='dark' variant='dark' id='navbar' expand='sm'>\r\n      <Navbar.Brand href='/'>\r\n        Stock Trader <AiOutlineStock />\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n      <Navbar.Collapse id='basic-navbar-nav'>\r\n        <Nav className='mr-auto d-flex justify-content-center nav-links'>\r\n          <Nav.Link onClick={() => props.history.push('/trade')}>\r\n            Trade\r\n          </Nav.Link>\r\n          <Nav.Link onClick={() => props.history.push('/portfolio')}>\r\n            Portfolio\r\n          </Nav.Link>\r\n        </Nav>\r\n        {JSON.parse(localStorage.getItem('userData')) ? (\r\n          <Nav>\r\n            <Nav.Link className='d-flex'>\r\n              <CgProfile size='1.5em' className='mr-1' /> Welcome {userName}\r\n            </Nav.Link>\r\n            <Nav.Link onClick={logOut}>Logout</Nav.Link>\r\n          </Nav>\r\n        ) : null}\r\n        <Nav.Link onClick={() => props.history.push('/instructions')}>\r\n          <Button variant='danger' size='md'>\r\n            About\r\n          </Button>\r\n        </Nav.Link>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n\r\n  //   return (\r\n  //     <Navbar bg='dark' variant='dark' id='navbar' expand='sm'>\r\n  //       <Navbar.Brand href='/'>\r\n  //         Fantazy <AiOutlineStock /> Stocks\r\n  //       </Navbar.Brand>\r\n  //       <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n  //       <Navbar.Collapse id='basic-navbar-nav'>\r\n  //         <Nav className='mr-auto d-flex justify-content-center nav-links'>\r\n  //           <Link to='/main'>Trade</Link>\r\n  //           <Link to='/portfolio'>Portfolio</Link>\r\n  //         </Nav>\r\n  //         {JSON.parse(sessionStorage.getItem('userData')) ? (\r\n  //           <Nav>\r\n  //             <Link className='d-flex'>\r\n  //               <CgProfile size='1.5em' className='mr-1' /> {userName}\r\n  //             </Link>\r\n  //             <Nav.Link onClick={logOut}>Logout</Nav.Link>\r\n  //           </Nav>\r\n  //         ) : null}\r\n  //         <Link to='/instructions'>\r\n  //           <Button variant='danger' size='md'>\r\n  //             About\r\n  //           </Button>\r\n  //         </Link>\r\n  //       </Navbar.Collapse>\r\n  //     </Navbar>\r\n  //   );\r\n};\r\n\r\nexport default withRouter(NavBar);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Button } from 'react-bootstrap';\r\n\r\nconst NoHoldings = () => {\r\n  return (\r\n    <Card className='text-center mt-5'>\r\n      <Card.Body className='d-block border'>\r\n        <Card.Title>You don't own any holdings as of yet.</Card.Title>\r\n        <Card.Text>\r\n          Go to our Trade page to start purchasing new stocks.{' '}\r\n        </Card.Text>\r\n        <Link to='/main'>\r\n          <Button variant='primary'>Trade Page</Button>\r\n        </Link>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default NoHoldings;\r\n","import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst RegisterForm = (props) => {\r\n  const [show, setShow] = useState(false);\r\n  const [user, setUser] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [userName, setUserName] = useContext(UserContext);\r\n  const [isMatch, setIsMatch] = useState(true);\r\n  const handleConfirmPassword = (event) => {\r\n    setConfirmPassword(event.target.value);\r\n    setIsMatch(event.target.value === password);\r\n  };\r\n\r\n  const userContext = useContext(UserContext);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const registerUser = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('/api/auth/register', {\r\n        user: user,\r\n        email: email,\r\n        password: password\r\n      });\r\n\r\n      localStorage.setItem('userData', JSON.stringify(response.data));\r\n      setUserName(response.data.name);\r\n\r\n      //  props.history.push('/');\r\n    } catch (err) {\r\n      console.error('error in registerUser', err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button size='lg' onClick={handleShow} className='btn btn-warning'>\r\n        Register\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header>\r\n          <Modal.Title> Register </Modal.Title>\r\n        </Modal.Header>\r\n        <Form onSubmit={registerUser}>\r\n          <Form.Group controlId='username'>\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Username'\r\n              value={user}\r\n              onChange={(e) => setUser(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Form.Text className='text-muted'>\r\n              Your email will never be shared with any 3rd parties.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password2'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Please confirm your password'\r\n              onChange={handleConfirmPassword}\r\n              className={isMatch ? '' : 'is-invalid'}\r\n            />\r\n            <Form.Control.Feedback type='invalid'>\r\n              Passwords do not match\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Button variant='primary' type='submit' onClick={handleClose}>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport BuyStockModal from './Modals/BuyStockModal';\r\nimport SellStockModal from './Modals/SellStockModal';\r\nimport { getHoldings } from '../utilities/tradingUtilities';\r\nimport StockInfoChart from './Charts/StockInfoChart';\r\n\r\nconst SelectedHolding = ({\r\n  selectedHolding,\r\n  buyShares,\r\n  sellShares,\r\n  updateShares\r\n}) => {\r\n  const [shares, setShares] = useState(0);\r\n  const [holdings, setHoldings] = useState([]);\r\n  const [holdingStyleColor, setHoldingStyleColor] = useState('');\r\n  const [positiveSign, setPositiveSign] = useState(false);\r\n\r\n  const {\r\n    companyName,\r\n    symbol,\r\n    latestPrice,\r\n    previousClose,\r\n    changePercent,\r\n    change\r\n  } = selectedHolding;\r\n\r\n  const getHoldingsData = () => {\r\n    getHoldings()\r\n      .then((holdingsData) => setHoldings(holdingsData))\r\n      .catch((err) => console.error('error get holdings', err));\r\n  };\r\n\r\n  const isHoldingNegativeOrPositive = useCallback(() => {\r\n    if (String(changePercent).charAt(0) === '-') {\r\n      setHoldingStyleColor('red');\r\n      setPositiveSign(false);\r\n    } else {\r\n      setHoldingStyleColor('green');\r\n      setPositiveSign('+');\r\n    }\r\n  }, [changePercent]);\r\n\r\n  useEffect(() => {\r\n    isHoldingNegativeOrPositive();\r\n    getHoldingsData();\r\n  }, [isHoldingNegativeOrPositive]);\r\n\r\n  useEffect(() => {\r\n    isHoldingNegativeOrPositive();\r\n  }, [selectedHolding, isHoldingNegativeOrPositive]);\r\n\r\n  const handleBuyShares = (shares) => {\r\n    updateShares(shares);\r\n    buyShares(selectedHolding, shares);\r\n    setShares((prevState) => prevState + parseInt(shares));\r\n  };\r\n\r\n  const handleSellShares = (shares) => {\r\n    sellShares(selectedHolding, shares);\r\n    updateShares(shares);\r\n    setShares((prevState) => prevState - parseInt(shares));\r\n  };\r\n\r\n  const compareSelectedHoldingToExisting = useCallback(() => {\r\n    if (selectedHolding) {\r\n      const holdingExist = holdings.find(\r\n        (holding) => holding.symbol === selectedHolding.symbol\r\n      );\r\n      if (holdingExist) {\r\n        setShares(holdingExist.shares);\r\n      }\r\n    }\r\n  }, [holdings, selectedHolding]);\r\n\r\n  useEffect(() => {\r\n    compareSelectedHoldingToExisting();\r\n  }, [holdings, compareSelectedHoldingToExisting]);\r\n\r\n  return (\r\n    <>\r\n      <div className='selected-holding card mt-4'>\r\n        <div className='card-head'>\r\n          <h2>\r\n            {' '}\r\n            {companyName}: {symbol}\r\n          </h2>\r\n          <div className='card-buttons'>\r\n            <BuyStockModal\r\n              handleBuyShares={handleBuyShares}\r\n              selectedHolding={selectedHolding}\r\n              shares={shares}\r\n            />\r\n            <SellStockModal\r\n              handleSellShares={handleSellShares}\r\n              selectedHolding={selectedHolding}\r\n              shares={shares}\r\n            />\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        <div className='card-body'>\r\n          <div className='price'>\r\n            <strong>Current Price</strong>\r\n            <p className={`mb-0 ${holdingStyleColor}`}>\r\n              ${latestPrice.toFixed(2)}\r\n            </p>\r\n            <small className={holdingStyleColor}>\r\n              Previous Closed: ${previousClose.toFixed(2)}{' '}\r\n            </small>\r\n          </div>\r\n          <div className='percent'>\r\n            <strong>Percent Change</strong>\r\n            <p className={holdingStyleColor}>\r\n              {positiveSign}\r\n              {changePercent.toFixed(3)}%\r\n            </p>\r\n          </div>\r\n          <div className='change'>\r\n            <strong>Daily Gain/Loss</strong>\r\n            <p className={holdingStyleColor}>\r\n              {positiveSign}${change}\r\n            </p>\r\n          </div>\r\n          <div className='shares-held'>\r\n            <strong>Shares Held</strong>\r\n            <p>{shares}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <StockInfoChart symbol={symbol} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectedHolding;\r\n","import React from 'react';\r\nimport { Toast } from 'react-bootstrap';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\n\r\nconst ShowAlert = (props) => {\r\n  const { latestPrice, symbol } = props.selectedHolding;\r\n\r\n  return (\r\n    <Toast\r\n      className='mx-auto'\r\n      onClose={() => props.toggleAlertState()}\r\n      show={props.isShowAlert}\r\n      delay={7000}\r\n      autohide\r\n    >\r\n      <Toast.Header>\r\n        <img src='holder.js/20x20?text=%20' className='rounded mr-2' alt='' />\r\n        <strong className='mr-auto'>\r\n          Transaction Completed\r\n          <FiCheckCircle className='text-success h5 mb-0' />\r\n        </strong>\r\n      </Toast.Header>\r\n      <Toast.Body>\r\n        Successfully {props.alertMessage} {props.sharesPurchased} shares from\r\n        {symbol} for a total of ${props.sharesPurchased * latestPrice}\r\n      </Toast.Body>\r\n    </Toast>\r\n  );\r\n};\r\n\r\nexport default ShowAlert;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { getWalletData } from '../utilities/portfolioUtilities';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nfunction UserInformation() {\r\n  const userName = useContext(UserContext);\r\n  const [wallet, setWallet] = useState(0);\r\n  const [totalHoldingsAmount, setTotalHoldingsAmount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchWalletData = async () => {\r\n      getWalletData()\r\n        .then((res) => {\r\n          setWallet(res.wallet);\r\n          setTotalHoldingsAmount(res.holdingsAmount);\r\n        })\r\n        .catch((err) => console.error('error get wallet', err));\r\n    };\r\n    fetchWalletData();\r\n  }, []);\r\n\r\n  return (\r\n    <Card className='user-info mt-3 w-50' align='center' border='dark'>\r\n      <Card.Header className='h4'>Account Information</Card.Header>\r\n      <ListGroup className='h5'>\r\n        <ListGroup.Item>User: {userName}</ListGroup.Item>\r\n        <ListGroup.Item>Account Balance: ${wallet.toFixed(1)}</ListGroup.Item>\r\n        <ListGroup.Item>\r\n          Total Holding Value: ${totalHoldingsAmount.toFixed(1)}\r\n        </ListGroup.Item>\r\n      </ListGroup>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default UserInformation;\r\n","import React from 'react';\r\nimport RegisterForm from '../Components/RegisterForm';\r\nimport LoginForm from '../Components/LogInForm';\r\nimport Welcome from './Welcome';\r\nimport '../Styles/home.css';\r\n\r\nconst Home = () => {\r\n  if (!localStorage.getItem('userData')) {\r\n    return (\r\n      <div id='home'>\r\n        <h1 className='text-center display-4 text-light'>\r\n          Welcome to Stock Trader\r\n        </h1>\r\n        <div className='home-container'>\r\n          <div className='home-content mt-5 h2 font-weight-light'>\r\n            <p>Experience the thrill of the stock market without the risk.</p>\r\n            <p>Before you start, please register to create an account.</p>\r\n            <div className='home-buttons-wrapper'>\r\n              <RegisterForm />\r\n              <LoginForm />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Welcome />;\r\n  }\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport UserInfo from '../Components/UserInformation';\r\nimport CurrentHoldings from '../Components/CurrentHoldings';\r\nimport NoHoldings from '../Components/NoHoldings';\r\nimport HeaderPortfolio from '../Components/Headers/PortfolioHeader';\r\nimport HoldingsChart from '../Components/Charts/HoldingsChart';\r\nimport { getHoldings } from '../utilities/tradingUtilities';\r\n\r\nconst Portfolio = () => {\r\n  const [holdings, setHoldings] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchHoldingsData = () => {\r\n      getHoldings()\r\n        .then((holdingsData) => {\r\n          setHoldings(holdingsData);\r\n        })\r\n        .catch((err) => console.error('error get holdings', err));\r\n    };\r\n    fetchHoldingsData();\r\n  }, []);\r\n\r\n  return (\r\n    <section className='portfolio-container text-size container'>\r\n      <HeaderPortfolio />\r\n      <div className='portfolio-top-wrapper d-flex align-items-start'>\r\n        <UserInfo />\r\n        <HoldingsChart />\r\n      </div>\r\n      <div className='user-holdings-list container'>\r\n        {holdings.length > 0 ? (\r\n          holdings.map((holding) => (\r\n            <CurrentHoldings holding={holding} key={holding.holding_id} />\r\n          ))\r\n        ) : (\r\n          <NoHoldings />\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","import React, { useState, useEffect } from 'react';\r\nimport qa from 'qs';\r\nimport {\r\n  searchForHolding,\r\n  getHoldings,\r\n  buyStock,\r\n  sellStock\r\n} from '../utilities/tradingUtilities';\r\nimport { withRouter } from 'react-router-dom';\r\nimport SelectedHolding from '../Components/SelectHolding';\r\nimport TradeHeader from '../Components/Headers/TradeHeader';\r\nimport ShowAlert from '../Components/ShowAlert';\r\nimport AddHolding from '../Components/AddHolding';\r\n\r\nconst Trade = (props) => {\r\n  const [holdings, setHoldings] = useState([]);\r\n  const [selectedHolding, setSelectedHolding] = useState(null);\r\n  const [isShowAlert, setIsShowAlert] = useState(false);\r\n  const [sharesPurchased, setSharesPurchased] = useState(0);\r\n  const [alertMessage, setAlertMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchHoldingsData = () => {\r\n      getHoldings()\r\n        .then((holdingsData) => setHoldings(holdingsData))\r\n        .catch((err) => console.error('error get holdings', err));\r\n    };\r\n\r\n    const renderSearchedHoldingFromPortfolio = () => {\r\n      const queryStrings = qa.parse(props.location.search, {\r\n        ignoreQueryPrefix: true\r\n      });\r\n      if (queryStrings.symbol) {\r\n        handleSearchForHolding(queryStrings.symbol);\r\n      }\r\n    };\r\n\r\n    renderSearchedHoldingFromPortfolio();\r\n    fetchHoldingsData();\r\n  }, [props.location.search]);\r\n\r\n  const updateShares = (shares) => {\r\n    setSharesPurchased(shares);\r\n  };\r\n\r\n  const toggleAlertState = () => {\r\n    setIsShowAlert((prevState) => !prevState);\r\n  };\r\n\r\n  const handleSearchForHolding = (symbol) => {\r\n    searchForHolding(symbol)\r\n      .then((selectedHolding) => setSelectedHolding(selectedHolding))\r\n      .catch((err) => console.error('error get holdings', err));\r\n  };\r\n\r\n  const sellShares = (holding, shares) => {\r\n    sellStock(holding, shares);\r\n    setAlertMessage('Stock successfully sold');\r\n    toggleAlertState();\r\n  };\r\n\r\n  const buyShares = async (holding, shares) => {\r\n    // send an http request to buy stocks\r\n    await buyStock(holding, shares);\r\n    // set alert messsgae to purchased\r\n    setAlertMessage('Stock successfully purchased');\r\n    // toggle alert state\r\n    toggleAlertState();\r\n  };\r\n  return (\r\n    <section className='trade-container'>\r\n      <TradeHeader />\r\n      <div className='container'>\r\n        {isShowAlert && (\r\n          <ShowAlert\r\n            toggleAlertState={toggleAlertState}\r\n            isShowAlert={isShowAlert}\r\n            selectedHolding={selectedHolding}\r\n            sharesPurchased={sharesPurchased}\r\n            alertMessage={alertMessage}\r\n          />\r\n        )}\r\n        <AddHolding handleSearchForHolding={handleSearchForHolding} />\r\n        {selectedHolding ? (\r\n          <SelectedHolding\r\n            selectedHolding={selectedHolding}\r\n            buyShares={buyShares}\r\n            sellShares={sellShares}\r\n            updateShares={updateShares}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default withRouter(Trade);\r\n","import React, { useContext } from 'react';\r\nimport { UserContext } from '../context/UserContext';\r\nimport { Card, Button, Row, Col, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { GiReceiveMoney } from 'react-icons/gi';\r\nimport { AiOutlineDatabase } from 'react-icons/ai';\r\n\r\nconst Welcome = () => {\r\n  const userName = useContext(UserContext);\r\n\r\n  return (\r\n    <div id='home'>\r\n      <div className='home-content m-0 text-justify w-100'>\r\n        <h1 className='text-center'>\r\n          Hi {userName}, below are some pointers on how to use this app.\r\n        </h1>\r\n        <Container>\r\n          <Row>\r\n            <Col lg={6}>\r\n              <Card bg='transparent' className='home-card mt-3'>\r\n                <GiReceiveMoney size='7em' className='col-logo' />\r\n                <Card.Body className='d-block'>\r\n                  <Card.Title as='h1' className='text-center'>\r\n                    Trade\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    Buy stocks by searching for a specific symbol, or view our\r\n                    recommended stocks. You are initially given a total of\r\n                    100,000 dollars. (It's not real money, unfortunately.)\r\n                  </Card.Text>\r\n                  <Link to='/trade'>\r\n                    <Button variant='primary' size='lg'>\r\n                      Start Trading\r\n                    </Button>\r\n                  </Link>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col lg={6}>\r\n              <Card bg='transparent' className='home-card mt-3'>\r\n                <AiOutlineDatabase size='7em' className='col-logo' />\r\n                <Card.Body className='d-block'>\r\n                  <Card.Title as='h1' className='text-center'>\r\n                    Data\r\n                  </Card.Title>\r\n                  <Card.Text>\r\n                    View your personal data, current holdings and statistics.\r\n                    With this information you can make informed decisions on\r\n                    what stocks to buy and sell.\r\n                  </Card.Text>\r\n                  <Link to='/portfolio'>\r\n                    <Button variant='primary' size='lg'>\r\n                      Personal Information\r\n                    </Button>\r\n                  </Link>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Welcome;\r\n","\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../node_modules/postcss-loader/src/index.js??postcss!./home.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../node_modules/postcss-loader/src/index.js??postcss!./home.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../../node_modules/postcss-loader/src/index.js??postcss!./home.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React, { useState, useEffect, createContext } from 'react';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const UserContextProvider = (props) => {\r\n  const [userName, setUserName] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (JSON.parse(localStorage.getItem('userData'))) {\r\n      setUserName(JSON.parse(localStorage.getItem('userData')).name);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={[userName, setUserName]}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-3-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from 'axios';\r\n\r\nexport const getWalletData = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/api/portfolio/wallet/${JSON.parse(localStorage.getItem('data')).id}`\r\n    );\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('Error in get wallet', err.message);\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const getHoldings = async () => {\r\n  try {\r\n    const response = await axios.get(\r\n      `/api/holdings/${JSON.parse(localStorage.getItem('userData')).id}`\r\n    );\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('Error in get holdings', err.message);\r\n  }\r\n};\r\n\r\nexport const buyStock = async (holding, shares) => {\r\n  try {\r\n    await axios.post(`/api/holdings/buy/`, {\r\n      user_id: JSON.parse(localStorage.getItem('userData')).id,\r\n      holding,\r\n      shares\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const sellStock = async (holding, shares) => {\r\n  try {\r\n    await axios.post(`/api/holdings/sell/`, {\r\n      user_id: JSON.parse(localStorage.getItem('userData')).id,\r\n      holding,\r\n      shares\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport const searchForHolding = async (symbol) => {\r\n  // debugger;\r\n  try {\r\n    const response = await axios.get(`/api/stocks/search/?symbol=${symbol}`);\r\n    return response.data;\r\n  } catch (err) {\r\n    console.error('error in search for holding', err.message);\r\n  }\r\n};\r\n","/* (ignored) */"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAHA;AAkBA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AALA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAHA;AAkBA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AASA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAZA;AAVA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuCA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;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;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnBA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;;;;;;;;;;;;ACjBA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC7CA;;;;A","sourceRoot":""}