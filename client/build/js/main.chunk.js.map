{"version":3,"file":"js/main.chunk.js","sources":["C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/App.css","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Styles/CurrentHoldingsCard.css","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Styles/SearchResultCard.css","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/index.css","webpack:///./src/App.css?dde5","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/App.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Components/Charts/PortfolioBarChart.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Components/Charts/PortfolioPieChart.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Components/Charts/SearchResultsChart.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Components/CurrentHoldingsCard.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Components/Header.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Components/LogInForm.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Components/SearchForm.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Components/SearchResultCard.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Components/SignUpForm.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Components/TransactionModal.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Pages/Home.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Pages/Portfolio.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Pages/Trade.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/Pages/Welcome.js","webpack:///./src/Styles/CurrentHoldingsCard.css?feab","webpack:///./src/Styles/SearchResultCard.css?1f07","webpack:///./src/index.css?bb0a","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/index.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/reportWebVitals.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/store/auth-context.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/store/user-context.js","C:/Users/spira/OneDrive/Documents/software-development-mastery-course/MainStockTrader/StockTrader/client/src/utils/helpers/currency-formatter.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".App {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.search-result-image {\\r\\n  height: 460px;\\r\\n  width: 400px;\\r\\n}\\r\\n\\r\\n.welcome-container {\\r\\n  border-radius: 20px;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.welcome-container p {\\r\\n  font-size: 1.5rem;\\r\\n}\\r\\n\\r\\n.form-container {\\r\\n  width: 400px !important;\\r\\n}\\r\\n\\r\\n.form-paragraph {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.App-logo {\\r\\n  height: 40vmin;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n@media (prefers-reduced-motion: no-preference) {\\r\\n  .App-logo {\\r\\n    animation: App-logo-spin infinite 20s linear;\\r\\n  }\\r\\n}\\r\\n\\r\\n.App-header {\\r\\n  background-color: #282c34;\\r\\n  min-height: 100vh;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-size: calc(10px + 2vmin);\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-link {\\r\\n  color: #61dafb;\\r\\n}\\r\\n.trade-button {\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n@keyframes App-logo-spin {\\r\\n  from {\\r\\n    transform: rotate(0deg);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/App.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,YAAY;AACd;;AAEA;EACE,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,qBAAqB;AACvB;;AAEA;EACE,cAAc;EACd,oBAAoB;AACtB;;AAEA;EACE;IACE,4CAA4C;EAC9C;AACF;;AAEA;EACE,yBAAyB;EACzB,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,6BAA6B;EAC7B,YAAY;AACd;;AAEA;EACE,cAAc;AAChB;AACA;EACE,WAAW;AACb;;AAEA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;AACF\",\"sourcesContent\":[\".App {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.search-result-image {\\r\\n  height: 460px;\\r\\n  width: 400px;\\r\\n}\\r\\n\\r\\n.welcome-container {\\r\\n  border-radius: 20px;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.welcome-container p {\\r\\n  font-size: 1.5rem;\\r\\n}\\r\\n\\r\\n.form-container {\\r\\n  width: 400px !important;\\r\\n}\\r\\n\\r\\n.form-paragraph {\\r\\n  display: inline-block;\\r\\n}\\r\\n\\r\\n.App-logo {\\r\\n  height: 40vmin;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n@media (prefers-reduced-motion: no-preference) {\\r\\n  .App-logo {\\r\\n    animation: App-logo-spin infinite 20s linear;\\r\\n  }\\r\\n}\\r\\n\\r\\n.App-header {\\r\\n  background-color: #282c34;\\r\\n  min-height: 100vh;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-size: calc(10px + 2vmin);\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-link {\\r\\n  color: #61dafb;\\r\\n}\\r\\n.trade-button {\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n@keyframes App-logo-spin {\\r\\n  from {\\r\\n    transform: rotate(0deg);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#holdings-header{\\r\\n    background-color: grey;\\r\\n}\\r\\n\\r\\n#holdings-header, p{\\r\\n    font-size: 1.5rem;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/Styles/CurrentHoldingsCard.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,sBAAsB;AAC1B;;AAEA;IACI,iBAAiB;AACrB\",\"sourcesContent\":[\"#holdings-header{\\r\\n    background-color: grey;\\r\\n}\\r\\n\\r\\n#holdings-header, p{\\r\\n    font-size: 1.5rem;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"#result-header{\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\n#result-card-body p{\\r\\n    font-size: 1.5rem;\\r\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://src/Styles/SearchResultCard.css\"],\"names\":[],\"mappings\":\"AAAA;IACI,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;AACrB\",\"sourcesContent\":[\"#result-header{\\r\\n    background-color: white;\\r\\n}\\r\\n\\r\\n#result-card-body p{\\r\\n    font-size: 1.5rem;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\r\\n  margin: 0;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\r\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\r\\n    sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n  background-color: whitesmoke !important;\\r\\n}\\r\\n\\r\\ncode {\\r\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\r\\n    monospace;\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://src/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;EAClC,uCAAuC;AACzC;;AAEA;EACE;aACW;AACb\",\"sourcesContent\":[\"body {\\r\\n  margin: 0;\\r\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\r\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\r\\n    sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n  -moz-osx-font-smoothing: grayscale;\\r\\n  background-color: whitesmoke !important;\\r\\n}\\r\\n\\r\\ncode {\\r\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\r\\n    monospace;\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src/index.js??postcss!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import React, { useContext } from 'react';\r\nimport { Route, BrowserRouter as Router, Redirect, Switch } from 'react-router-dom';\r\nimport AuthContext from './store/auth-context';\r\nimport './App.css';\r\nimport Header from './Components/Header';\r\nimport Home from './Pages/Home';\r\nimport Welcome from './Pages/Welcome';\r\nimport Trade from './Pages/Trade';\r\nimport Portfolio from './Pages/Portfolio'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  const authCtx = useContext(AuthContext);\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n\r\n  return (\r\n    <Router>\r\n        <Header />\r\n\r\n      <Switch>\r\n          {!isLoggedIn && (\r\n            <Route exact path=\"/\"  component={Home} />\r\n          )}\r\n          {isLoggedIn && (\r\n            <Route exact path=\"/\"  component={Welcome} />\r\n          )}\r\n          {isLoggedIn && (\r\n            <Route path=\"/trade\" component={Trade} />\r\n          )}\r\n          {isLoggedIn && (\r\n            <Route path=\"/portfolio\" component={Portfolio} />\r\n          )}\r\n          <Route path=\"*\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n          {/* <Route path=\"*\" component={Home} /> */}\r\n          {/* <Route render={() => <Redirect to={{path: \"/\"}} />} /> */}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nfunction PortfolioBarChart(props){\r\n\r\n    return(\r\n        <div>\r\n            <Chart\r\n                width={'100%'}\r\n                height={'400px'}\r\n                chartType=\"BarChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['Symbol', 'Shares'],\r\n                    ...props.holdings.map(holding => [holding.symbol, holding.shares_owned])\r\n                    ]}\r\n                options={{\r\n                    title: \"Your Portfolio Shares Owned Distribution\",\r\n                    titleTextStyle: { fontSize: 18 },\r\n                    chartArea: {\r\n                        width: \"80%\",\r\n                        height: \"75%\"\r\n                    }, \r\n                    hAxis: {\r\n                        title: 'Number of Shares Owned'\r\n                    },\r\n                    vAxis: {\r\n                        title: 'Symbol'\r\n                    }\r\n                    \r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PortfolioBarChart;","import React from 'react';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nfunction PortfolioPieChart(props){\r\n\r\n    return(\r\n        <div>\r\n            <Chart\r\n                width={'800px'}\r\n                height={'400px'}\r\n                chartType=\"PieChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['Symbol', 'Price'],\r\n                    ...props.holdings.map(holding => [holding.symbol, parseFloat(holding.shares_value)])\r\n                    ]}\r\n                options={{\r\n                    title: \"Your Portfolio Shares Value Distribution\",\r\n                    titleTextStyle: { fontSize: 18 },\r\n                    chartArea: {\r\n                        width: \"100%\",\r\n                        height: \"75%\"\r\n                    }\r\n                    \r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PortfolioPieChart;","import React from 'react';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nfunction SearchResultsChart(props){\r\n    return(\r\n        <div>\r\n            <Chart\r\n                width={'100%'}\r\n                height={'500px'}\r\n                chartType=\"AreaChart\"\r\n                loader={<div>Loading Chart</div>}\r\n                data={[\r\n                    ['Date', 'Price'],\r\n                    ...props.chartData.map(d => [d.date, d.close])\r\n                    ]}\r\n                options={{\r\n                    title: `Closing Prices for ${props.companyName} the Last Week`,\r\n                    pointSize: 10,\r\n                    colors: ['#15A0C8'],\r\n                    series: {\r\n                        0: { \r\n                            pointShape: 'circle',\r\n                            curveType: 'function'\r\n                        }\r\n                    },\r\n                    chartArea: \"100%\",\r\n                    hAxis: {title: \"Date\"},\r\n                    vAxis: {title: \"Price\"}\r\n                }}\r\n                rootProps={{ 'data-testid': '1' }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResultsChart;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport '../Styles/CurrentHoldingsCard.css';\r\nimport axios from 'axios';\r\nimport AuthContext from '../store/auth-context';\r\nconst formatter = require('../utils/helpers/currency-formatter');\r\n\r\nfunction CurrentHoldingsCard(props) {\r\n    const [currentPrice, setCurrentPrice] = useState(null);\r\n    const [currentValue, setCurrentValue] = useState(null);\r\n\r\n    const authCtx = useContext(AuthContext);\r\n\r\n    const headers = {\r\n        \"Content-type\": \"application/json\", \r\n        \"Accept\": \"application/json\", \r\n        \"Authorization\": \"Bearer\" + \" \" + authCtx.token\r\n    }\r\n\r\n    useEffect(async () => {\r\n        const response = await axios.get(`/api/search/${props.holding.symbol}`, {\r\n            headers:headers\r\n            }\r\n        );\r\n        setCurrentPrice(response.data.latestPrice);\r\n        console.log(response.data);\r\n\r\n    },[props.holding.symbol]);\r\n\r\n    useEffect(() => {\r\n        setCurrentValue(currentPrice * props.holding.shares_owned);\r\n\r\n    }, [currentPrice, props.holding.shares_owned]); \r\n\r\n    useEffect(() => {\r\n        updateSharesValue();\r\n    }, [currentValue]);\r\n    \r\n    function updateSharesValue (){\r\n        \r\n        const body = {\r\n            userId: authCtx.userId, \r\n            symbol: props.holding.symbol, \r\n            newValue: currentValue\r\n        }\r\n\r\n        axios.put('/api/stocks/update', body, {headers:headers});\r\n    };\r\n\r\n    const price = formatter.format(currentPrice);\r\n    const value = formatter.format(currentValue);\r\n\r\n    return(\r\n        <Card style={{width: '18rem'}} className=\"mt-2 shadow-lg\">\r\n            <Card.Header id=\"holdings-header\">\r\n                <h3>{props.holding.symbol}</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <p>Current Shares: {props.holding.shares_owned}</p>\r\n                <p>Current Price:{price}</p>\r\n                <p>Value of Shares: {value}</p>\r\n                <Button onClick={()=>{props.handleStockSearch(event, props.holding.symbol)}} variant=\"outline-dark\">View Details</Button>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default CurrentHoldingsCard;","import React from 'react';\r\nimport { Nav, Navbar, Button } from 'react-bootstrap';\r\nimport { useContext } from 'react';\r\nimport AuthContext from '../store/auth-context';\r\nimport UserContext from '../store/user-context';\r\n\r\nfunction Header() {\r\n    const authCtx = useContext(AuthContext);\r\n    const userCtx = useContext(UserContext);\r\n\r\n    const isLoggedIn = authCtx.isLoggedIn;\r\n\r\n    function logoutHandler(){\r\n        authCtx.logout();\r\n        userCtx.logout();\r\n    };\r\n\r\n    return(\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" sticky=\"top\">\r\n            <Navbar.Brand href=\"#home\"></Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav>\r\n                    <Nav.Link href=\"/\">Home</Nav.Link>\r\n                    {isLoggedIn && (<Nav.Link href=\"/trade\">Trade</Nav.Link>)}\r\n                    {isLoggedIn && (<Nav.Link href=\"/portfolio\">Portfolio</Nav.Link>)}\r\n                    {isLoggedIn && (<Button variant=\"dark\" onClick={logoutHandler}>Logout</Button>)}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction LogInForm(props) {\r\n  return (\r\n    <Container className='form-container'>\r\n      <Form onSubmit={props.handleLogin}>\r\n        <Form.Group controlId='formBasicEmail'>\r\n          <Form.Control\r\n            type='text'\r\n            ref={props.userNameInputRef}\r\n            placeholder='Enter Username'\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId='formBasicPassword'>\r\n          <Form.Control\r\n            type='password'\r\n            ref={props.passwordInputRef}\r\n            placeholder='Password'\r\n          />\r\n        </Form.Group>\r\n        <Button variant='dark' type='submit'>\r\n          Login\r\n        </Button>\r\n        <p className='form-paragraph'>\r\n          Not registered yet? Register{' '}\r\n          <Link onClick={props.isRegistered} to='/register'>\r\n            Here\r\n          </Link>\r\n        </p>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LogInForm;\r\n","import React from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nfunction SearchForm(props) {\r\n    return(\r\n        <Form inline className=\"justify-content-around mb-3\" onSubmit={()=>{props.handleStockSearch(event, props.inputValue)}}>\r\n            <Form.Group>\r\n                <Form.Label htmlFor=\"stockSymbolSearch\" srOnly>Stock Symbol</Form.Label>\r\n                <Form.Control type=\"text\" id=\"stockSymbolSearch\" placeholder=\"Enter Stock Symbol\" className=\"mr-1\" value={props.inputValue} onChange={props.handleInputValueChange} />\r\n                <Button type=\"submit\">Search</Button>\r\n            </Form.Group>\r\n        </Form>\r\n    );\r\n};\r\n\r\n\r\nexport default SearchForm;","import React from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport '../Styles/SearchResultCard.css';\r\nconst formatter = require('../utils/helpers/currency-formatter');\r\n\r\n\r\nfunction SearchResultCard(props){\r\n\r\n    const price = formatter.format(props.currentPrice);\r\n    const priceChange = formatter.format(props.priceChange);\r\n\r\n    const buttons = () => {\r\n        if(props.currentShares === 0){\r\n            return (\r\n                <div>\r\n                    <Button className=\"mx-3\" onClick={props.buyTransaction}>Buy</Button>\r\n                    <Button onClick={props.sellTransaction} disabled>Sell</Button>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Button className=\"mx-3\" onClick={props.buyTransaction}>Buy</Button>\r\n                    <Button onClick={props.sellTransaction}>Sell</Button>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Card>\r\n            <Card.Header id=\"result-header\" as=\"h3\" className=\"text-left d-flex justify-content-between\">{props.stockSymbol} \r\n                <div>\r\n                    {props.companyName} \r\n                </div>\r\n                {buttons()}\r\n            </Card.Header>\r\n            <Card.Body id=\"result-card-body\" className=\"d-flex justify-content-around\">\r\n                <div>\r\n                    <h4>Current Shares</h4>\r\n                    <p>{props.currentShares}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>Current Price</h4>\r\n                    <p>{price}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>Price Change</h4>\r\n                    <p>{priceChange}</p>\r\n                </div>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default SearchResultCard;","import React from 'react';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction SignUpForm(props) {\r\n  return (\r\n    <Container className='form-container'>\r\n      <Form onSubmit={props.handleSignUp}>\r\n        <Form.Group>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Choose Username'\r\n            ref={props.userNameInputRef}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId='formBasicPassword'>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Password'\r\n            ref={props.passwordInputRef}\r\n          />\r\n        </Form.Group>\r\n        <Button variant='dark' type='submit'>\r\n          Register\r\n        </Button>\r\n        <p className='form-paragraph'>\r\n          Already registered? Login{' '}\r\n          <Link onClick={props.isRegistered} to='/login'>\r\n            Here\r\n          </Link>\r\n        </p>\r\n      </Form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React, { useState, useContext } from 'react';\r\nimport { Modal, Button, Form, ModalDialog } from 'react-bootstrap';\r\nimport AuthContext from '../store/auth-context';\r\nconst formatter = require('../utils/helpers/currency-formatter');\r\nimport axios from 'axios';\r\n\r\nfunction TransactionModal(props) {\r\n    const [sharesToTrade, setSharesToTrade] = useState(null);\r\n    const [oversellMessage, setOversellMessage] = useState(null);\r\n    const [overbuyMessage, setOverBuyMessage] = useState(null);\r\n\r\n    const price = formatter.format(props.currentPrice);\r\n    const purchaseAmount = sharesToTrade * props.currentPrice;\r\n    const authCtx = useContext(AuthContext);\r\n\r\n    const headers = {\r\n        \"Content-type\": \"application/json\", \r\n        \"Accept\": \"application/json\", \r\n        \"Authorization\": \"Bearer\" + \" \" + authCtx.token\r\n    }\r\n\r\n    async function buyButtonHandler(){\r\n        if ((sharesToTrade * props.currentPrice > props.accountBalance)){\r\n            setOverBuyMessage(\"You Cannot Spend More Than Current Account Balance!\");\r\n            return;\r\n        } else {\r\n            if (props.currentShares === 0){\r\n                const body = {\r\n                    userId: authCtx.userId, \r\n                    symbol: props.stockSymbol, \r\n                    companyName: props.companyName, \r\n                    sharesToBuy: sharesToTrade, \r\n                    sharesValue: (sharesToTrade * props.currentPrice)\r\n                }\r\n                \r\n                await axios.post('/api/stocks/new', body, {headers:headers});\r\n            } else {\r\n                const body = {\r\n                    userId: authCtx.userId, \r\n                    symbol: props.stockSymbol, \r\n                    newShares: parseInt(props.currentShares) + parseInt(sharesToTrade),\r\n                    newValue: props.currentPrice * (parseInt(props.currentShares) + parseInt(sharesToTrade))\r\n                }\r\n    \r\n                await axios.put('/api/stocks/buy', body, {headers:headers});\r\n            }\r\n        }\r\n        \r\n        props.getHoldings(authCtx.userId);\r\n        props.setShowChart(false);\r\n        props.setShowResultCard(false);\r\n        props.subtractAccountBalance(purchaseAmount);\r\n        setOverBuyMessage(null);\r\n        props.handleCloseModal();   \r\n    };\r\n\r\n    async function sellButtonHandler(){\r\n        if (sharesToTrade > props.currentShares) {\r\n            setOversellMessage(\"You Cannot Sell More Shares of This Stock Than You Own!\");\r\n        } else {\r\n            const body = {\r\n                userId: authCtx.userId, \r\n                symbol: props.stockSymbol, \r\n                newShares: parseInt(props.currentShares) - parseInt(sharesToTrade),\r\n                newValue: props.currentPrice * (parseInt(props.currentShares) - parseInt(sharesToTrade))\r\n            }\r\n    \r\n            await axios.put('/api/stocks/sell', body, {headers:headers});\r\n        \r\n            props.getHoldings(authCtx.userId);\r\n            props.setShowChart(false);\r\n            props.setShowResultCard(false);\r\n            props.addAccountBalance(purchaseAmount);\r\n            setOversellMessage(null);\r\n            props.handleCloseModal();\r\n        } \r\n    };\r\n\r\n    function renderButtons(){\r\n        if (props.buyOrSell === \"Buy\") {\r\n\r\n            return <div>\r\n                        <Button className=\"mr-3\" onClick={buyButtonHandler}>Buy Shares</Button>\r\n                        <Button disabled>Sell Shares</Button>\r\n                    </div>\r\n            \r\n        } else if (props.buyOrSell === \"Sell\"){\r\n            return <div>\r\n                        <Button className=\"mr-3\" disabled>Buy Shares</Button>\r\n                        <Button onClick={sellButtonHandler}>Sell Shares</Button>\r\n                    </div>\r\n        }\r\n    };\r\n\r\n    function sharesToTradeHandler(event){\r\n        setSharesToTrade(event.target.value)\r\n    };\r\n\r\n    let transactionType;\r\n    if (props.buyOrSell === \"Buy\") {\r\n        transactionType = \"Buy\" \r\n    } else if (props.buyOrSell ===\"Sell\") {\r\n        transactionType = \"Sell\"\r\n    } \r\n\r\n    return(\r\n        <Modal show={props.show} onHide={props.handleCloseModal} centered>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>{props.stockSymbol}</Modal.Title>\r\n            </Modal.Header>\r\n            <Form>\r\n                <Modal.Body className=\"text-center\">\r\n                    <p>Current Share Price: {price}</p>\r\n                    <p>Current Number of Shares: {props.currentShares}</p>\r\n                    <p>Current Account Balance: {props.balance}</p>\r\n                        <Form.Group>\r\n                            <Form.Label>Number of Shares to {transactionType}</Form.Label>\r\n                            <Form.Control type=\"number\" min=\"0\" onChange={sharesToTradeHandler}></Form.Control>\r\n                            {!!oversellMessage && (<ModalDialog>{oversellMessage}</ModalDialog>)}\r\n                            {!!overbuyMessage && (<ModalDialog>{overbuyMessage}</ModalDialog>)}\r\n                        </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {renderButtons()}\r\n                </Modal.Footer>\r\n            </Form>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default TransactionModal;","import axios from 'axios';\r\nimport React, { useState, useRef, useContext } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport LogInForm from '../Components/LogInForm';\r\nimport SignUpForm from '../Components/SignUpForm';\r\nimport AuthContext from '../store/auth-context';\r\nimport UserContext from '../store/user-context';\r\n\r\nfunction Home() {\r\n  const [isRegistered, setIsRegistered] = useState(true);\r\n  const [successfulReg, setSuccessfulReg] = useState(false);\r\n  const userNameInputRef = useRef();\r\n  const passwordInputRef = useRef();\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const userCtx = useContext(UserContext);\r\n\r\n  function toggleIsRegistered(event) {\r\n    event.preventDefault();\r\n    setIsRegistered((prevState) => !prevState);\r\n    if (isRegistered) {\r\n      setSuccessfulReg(false);\r\n    }\r\n  }\r\n\r\n  const formSwitch = () => {\r\n    if (isRegistered) {\r\n      return (\r\n        <LogInForm\r\n          isRegistered={toggleIsRegistered}\r\n          handleLogin={handleLogin}\r\n          userNameInputRef={userNameInputRef}\r\n          passwordInputRef={passwordInputRef}\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <SignUpForm\r\n          isRegistered={toggleIsRegistered}\r\n          handleSignUp={handleSignUp}\r\n          userNameInputRef={userNameInputRef}\r\n          passwordInputRef={passwordInputRef}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  function handleLogin(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredUserName = userNameInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    if (enteredUserName && enteredPassword) {\r\n      axios\r\n        .post('/api/login', {\r\n          username: enteredUserName,\r\n          password: enteredPassword\r\n        })\r\n        .then((res) => {\r\n          //expirationTime is current time plus token expiresIn converted to a new date object\r\n          const expirationTime = new Date(\r\n            new Date().getTime() + +res.data.expiresIn\r\n          );\r\n          authCtx.login(\r\n            res.data.accessToken,\r\n            expirationTime.toISOString(),\r\n            res.data.result[0].id\r\n          );\r\n          userCtx.login(\r\n            res.data.result[0].wallet_balance,\r\n            res.data.result[0].username\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          alert('Please check your username/password.');\r\n        });\r\n    } else {\r\n      alert('You must provide a username and password.');\r\n    }\r\n  }\r\n\r\n  function handleSignUp(event) {\r\n    event.preventDefault();\r\n    const enteredUserName = userNameInputRef.current.value;\r\n    const enteredPassword = passwordInputRef.current.value;\r\n\r\n    axios\r\n      .post('/api/signup', {\r\n        username: enteredUserName,\r\n        password: enteredPassword\r\n      })\r\n      .then((res) => {\r\n        if (!res.data.detail) {\r\n          setIsRegistered((prevState) => !prevState);\r\n          setSuccessfulReg((prevState) => !prevState);\r\n        } else {\r\n          const errorMessage = res.data.detail;\r\n          alert(errorMessage);\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Container className='App welcome-container'>\r\n        <h1>Welcome Stock Trader</h1>\r\n        <p></p>\r\n      </Container>\r\n      {successfulReg && (\r\n        <p className='text-center'>Registration Successful - Login Below</p>\r\n      )}\r\n      {formSwitch()}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container, Card, ListGroup, Row, Col } from 'react-bootstrap';\r\nimport UserContext from '../store/user-context';\r\nimport AuthContext from '../store/auth-context';\r\nimport axios from 'axios';\r\nimport PortfolioPieChart from '../Components/Charts/PortfolioPieChart';\r\nimport PortfolioBarChart from '../Components/Charts/PortfolioBarChart';\r\nconst formatter = require('../utils/helpers/currency-formatter');\r\n\r\nfunction Portfolio() {\r\n    const [sharesValue, setSharesValue] = useState();\r\n    const [currentHoldings, setCurrentHoldings] = useState([]);\r\n    const [showCharts, setShowCharts] = useState(false);\r\n\r\n    const authCtx = useContext(AuthContext);\r\n    const userCtx = useContext(UserContext);\r\n\r\n    const headers = {\r\n        \"Content-type\": \"application/json\", \r\n        \"Accept\": \"application/json\", \r\n        \"Authorization\": \"Bearer\" + \" \" + authCtx.token\r\n    }\r\n\r\n    useEffect(() => { \r\n        getPortfolioTotal(authCtx.userId);\r\n        getHoldings(authCtx.userId);\r\n    }, []);\r\n\r\n    async function getHoldings(userId){\r\n        const response = await axios.get(`/api/stocks/${userId}`, {\r\n            headers:headers, \r\n            params: {\r\n                userId: authCtx.userId\r\n            }\r\n        })\r\n\r\n            setCurrentHoldings(response.data);\r\n            return response;\r\n    };\r\n\r\n    async function getPortfolioTotal(userId){\r\n        const response = await axios.get(`/api/portfolio/${userId}`, {\r\n            headers:headers, \r\n            params: {\r\n                userId: authCtx.userId\r\n            }\r\n        })\r\n\r\n        if (response.data[0].total != null) {\r\n            setSharesValue(response.data[0].total);\r\n            setShowCharts(true);\r\n        } else {\r\n            setSharesValue(0);\r\n            setShowCharts(false);\r\n        }\r\n        return response;\r\n    };\r\n\r\n    const formattedBalance = formatter.format(userCtx.accountBalance);\r\n    const formattedSharesValue = formatter.format(sharesValue);\r\n    const totalHoldings = parseFloat(userCtx.accountBalance) + parseFloat(sharesValue);\r\n    const formattedHoldings = formatter.format(totalHoldings);\r\n\r\n    return(\r\n        <Container className=\"App\">\r\n            <h2 className=\"pt-3\">{userCtx.userName}'s Portfolio</h2>\r\n                <Container className=\"d-flex align-items-start mt-5\">\r\n                    <Row>\r\n                        <Col lg={5}>\r\n                            <Card style={{ width: '24rem' }}>\r\n                                <Card.Header as=\"h3\">Account Information</Card.Header>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item as=\"p\">Wallet Balance: {formattedBalance}</ListGroup.Item>\r\n                                    <ListGroup.Item as=\"p\">Value of All Shares: {formattedSharesValue}</ListGroup.Item>\r\n                                    <ListGroup.Item as=\"p\">Total Holdings: {formattedHoldings}</ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col lg={7}>\r\n                        {showCharts && <PortfolioPieChart \r\n                            holdings={currentHoldings}\r\n                        />}\r\n                        {!showCharts && <h3>Your Portfolio Currently Consists of Your Account Balance...Go Trade!</h3>}\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </Container>\r\n            \r\n            <Container className=\"mt-3\">\r\n                <Row>\r\n                    <Col lg={12}>\r\n                        {showCharts && <PortfolioBarChart \r\n                            holdings={currentHoldings}\r\n                        />}\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Portfolio;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport SearchForm from '../Components/SearchForm';\r\nimport SearchResultCard from '../Components/SearchResultCard';\r\nimport CurrentHoldingsCard from '../Components/CurrentHoldingsCard';\r\nimport TransactionModal from '../Components/TransactionModal';\r\nimport AuthContext from '../store/auth-context';\r\nimport UserContext from '../store/user-context';\r\nimport axios from 'axios';\r\nimport SearchResultsChart from '../Components/Charts/SearchResultsChart';\r\nconst formatter = require('../utils/helpers/currency-formatter');\r\n\r\nfunction Trade() {\r\n  const [currentHoldings, setCurrentHoldings] = useState([]);\r\n  const [showChart, setShowChart] = useState(false);\r\n  const [showResultCard, setShowResultCard] = useState(false);\r\n  const [stockSymbol, setStockSymbol] = useState('');\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [show, setShow] = useState(false);\r\n  const [buyOrSell, setBuyOrSell] = useState('');\r\n  const [currentPrice, setCurrentPrice] = useState(null);\r\n  const [currentShares, setCurrentShares] = useState(null);\r\n  const [priceChange, setPriceChange] = useState(null);\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  const authCtx = useContext(AuthContext);\r\n  const userCtx = useContext(UserContext);\r\n  const [accountBalance, setAccountBalance] = useState(userCtx.accountBalance);\r\n\r\n  const headers = {\r\n    'Content-type': 'application/json',\r\n    Accept: 'application/json',\r\n    Authorization: 'Bearer ' + authCtx.token\r\n  };\r\n\r\n  useEffect(() => {\r\n    getHoldings(authCtx.userId);\r\n  }, []);\r\n\r\n  async function getHoldings(userId) {\r\n    const response = await axios.get(`/api/stocks/${userId}`, {\r\n      headers: headers,\r\n      params: {\r\n        userId: authCtx.userId\r\n      }\r\n    });\r\n\r\n    setCurrentHoldings(response.data);\r\n    return response;\r\n  }\r\n\r\n  function subtractAccountBalance(amount) {\r\n    setAccountBalance((prevState) => parseFloat(prevState) - amount);\r\n  }\r\n\r\n  function addAccountBalance(amount) {\r\n    setAccountBalance((prevState) => parseFloat(prevState) + amount);\r\n  }\r\n\r\n  useEffect(async () => {\r\n    const body = {\r\n      balance: accountBalance,\r\n      user: authCtx.userId\r\n    };\r\n    localStorage.setItem('accountBalance', accountBalance.toString());\r\n\r\n    await axios.put('/api/user/wallet-update', body);\r\n  }, [accountBalance]);\r\n\r\n  function buyTransaction(event) {\r\n    setShow(true);\r\n    setBuyOrSell(event.target.textContent);\r\n  }\r\n\r\n  function sellTransaction(event) {\r\n    setShow(true);\r\n    setBuyOrSell(event.target.textContent);\r\n  }\r\n\r\n  function handleShowModal() {\r\n    setShow(true);\r\n  }\r\n\r\n  function handleCloseModal() {\r\n    setShow(false);\r\n  }\r\n\r\n  function handleInputValueChange(event) {\r\n    setInputValue(event.target.value);\r\n  }\r\n\r\n  async function handleStockSearch(event, inputValue) {\r\n    event.preventDefault();\r\n\r\n    const responseData = await fetch(`/api/search/${inputValue}`, {\r\n      headers: headers\r\n    }).then((res) => res.json());\r\n\r\n    const chartResponseData = await axios.get(\r\n      `/api/search/chart/${inputValue}`,\r\n      { headers: headers }\r\n    );\r\n\r\n    if (typeof chartResponseData.data.length === 'number') {\r\n      const chartData = [];\r\n      for (let i = 0; i < chartResponseData.data.length; i++) {\r\n        chartData.push(chartResponseData.data[i]);\r\n      }\r\n      setChartData(chartData);\r\n      setShowChart(true);\r\n      setShowResultCard(true);\r\n    } else {\r\n      alert('You Did Not Enter A Valid Stock Symbol. Please Try Again.');\r\n      setShowChart(false);\r\n      setShowResultCard(false);\r\n    }\r\n\r\n    setStockSymbol(responseData.symbol);\r\n    setInputValue('');\r\n    setCurrentPrice(responseData.latestPrice);\r\n    setPriceChange(responseData.change);\r\n    setCompanyName(responseData.companyName);\r\n\r\n    const response = await getHoldings(authCtx.userId);\r\n\r\n    if (response.data.length === 0) {\r\n      setCurrentShares(0);\r\n    } else {\r\n      for (let i = 0; i < response.data.length; i++) {\r\n        if (response.data[i].symbol === responseData.symbol) {\r\n          setCurrentShares(response.data[i].shares_owned);\r\n          break;\r\n        } else {\r\n          setCurrentShares(0);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const balance = formatter.format(accountBalance);\r\n  return (\r\n    <Container className='App'>\r\n      <h2 className='pt-3'>Trading Page</h2>\r\n      <h3>Current Wallet Balance: {balance}</h3>\r\n      <p>\r\n        Search Stock Symbols to Trade. Examples: \"AAPL\" = Apple \"NFLX\" = Netflix\r\n      </p>\r\n      <p>\r\n        For current holdings, click the \"View Details\" button on the\r\n        corresponding card to trade that stock.\r\n      </p>\r\n      <SearchForm\r\n        handleStockSearch={handleStockSearch}\r\n        handleInputValueChange={handleInputValueChange}\r\n        inputValue={inputValue}\r\n      />\r\n      {showResultCard && (\r\n        <SearchResultCard\r\n          stockSymbol={stockSymbol}\r\n          handleShowModal={handleShowModal}\r\n          buyTransaction={buyTransaction}\r\n          sellTransaction={sellTransaction}\r\n          currentPrice={currentPrice}\r\n          priceChange={priceChange}\r\n          companyName={companyName}\r\n          currentShares={currentShares}\r\n        />\r\n      )}\r\n      {showChart && (\r\n        <SearchResultsChart companyName={companyName} chartData={chartData} />\r\n      )}\r\n      <div className='row justify-content-around'>\r\n        {currentHoldings.map((holding) => (\r\n          <CurrentHoldingsCard\r\n            key={holding.symbol}\r\n            holding={holding}\r\n            handleStockSearch={handleStockSearch}\r\n          />\r\n        ))}\r\n      </div>\r\n      <TransactionModal\r\n        buyOrSell={buyOrSell}\r\n        stockSymbol={stockSymbol}\r\n        show={show}\r\n        currentPrice={currentPrice}\r\n        currentShares={currentShares}\r\n        handleShowModal={handleShowModal}\r\n        handleCloseModal={handleCloseModal}\r\n        getHoldings={getHoldings}\r\n        setShowChart={setShowChart}\r\n        setShowResultCard={setShowResultCard}\r\n        companyName={companyName}\r\n        balance={balance}\r\n        subtractAccountBalance={subtractAccountBalance}\r\n        addAccountBalance={addAccountBalance}\r\n        accountBalance={accountBalance}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Trade;\r\n","import React, { useContext } from 'react';\r\nimport UserContext from '../store/user-context';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Welcome() {\r\n  const userCtx = useContext(UserContext);\r\n\r\n  return (\r\n    <Container>\r\n      <Container className='App welcome-container'>\r\n        <h1>Welcome {userCtx.userName} to Stock Trader</h1>\r\n        <p>\r\n          {' '}\r\n          Now that you have registered and logged in, you can begin trading. The\r\n          first step is head to the \"Trade\" page. There you can search for a\r\n          stock(s) you'd like to purchase. You will be given a digital wallet\r\n          with a balance of $100,000USD. So you'll have plenty of room to play\r\n          around. Pretty nice, eh? So go ahead and click on the \"Trade\" link\r\n          above and get started. Or you can click this button, too.\r\n        </p>\r\n        <Button>\r\n          <Link className='trade-button' to='/trade/'>\r\n            Trade\r\n          </Link>\r\n        </Button>\r\n      </Container>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Welcome;\r\n","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../../node_modules/postcss-loader/src/index.js??postcss!./CurrentHoldingsCard.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../../node_modules/postcss-loader/src/index.js??postcss!./SearchResultCard.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","var api = require(\"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-4-1!../node_modules/postcss-loader/src/index.js??postcss!./index.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { AuthContextProvider } from './store/auth-context';\r\nimport { UserContextProvider } from './store/user-context';\r\n\r\nReactDOM.render(\r\n  \r\n    <AuthContextProvider>\r\n      <UserContextProvider>\r\n        <React.StrictMode>\r\n          <App />\r\n        </React.StrictMode>\r\n      </UserContextProvider>\r\n    </AuthContextProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '', \r\n    isLoggedIn: false,\r\n    userId: '',\r\n    login: (token) =>{}, \r\n    logout: () => {}\r\n});\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime();\r\n    const adjustedExpirationTime = new Date(expirationTime).getTime();\r\n\r\n    const remainingDuration = adjustedExpirationTime - currentTime;\r\n\r\n    return remainingDuration;\r\n};\r\n\r\nconst retrieveStoredToken = () => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUserId = localStorage.getItem('userId');\r\n    const storedExpirationDate = localStorage.getItem('expirationTime');\r\n\r\n    const remainingTime = calculateRemainingTime(storedExpirationDate);\r\n\r\n    if (remainingTime <= 60000) { //if less than 1m exists, do not log in \r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('expirationTime');\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        token: storedToken,\r\n        userId: storedUserId, \r\n        duration: remainingTime\r\n    }\r\n};\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const tokenData = retrieveStoredToken();\r\n    let initialToken;\r\n    let initialUserId;\r\n\r\n    tokenData ? initialToken = tokenData.token : initialToken = undefined;\r\n    tokenData ? initialUserId = tokenData.userId : initialUserId = undefined;\r\n    \r\n    const [token, setToken] = useState(initialToken);\r\n    const [userId, setUserId] = useState(initialUserId);\r\n\r\n    const userIsLoggedIn = !!token;\r\n\r\n    const logoutHandler = useCallback(() => {\r\n        setToken(null);\r\n        setUserId(null);\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('userId');\r\n        localStorage.removeItem('expirationTime');\r\n\r\n        logoutTimer ? clearTimeout(logoutTimer) : null;\r\n    }, []);\r\n\r\n    const loginHandler = (token, expirationTime, userId) =>{\r\n        setToken(token);\r\n        setUserId(userId);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('userId', userId);\r\n        localStorage.setItem('expirationTime', expirationTime);\r\n\r\n        const remainingTime = calculateRemainingTime(expirationTime);\r\n\r\n        logoutTimer = setTimeout(logoutHandler, remainingTime);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (tokenData){\r\n            logoutTimer = setTimeout(logoutHandler, tokenData.duration);\r\n        }\r\n    }, [tokenData], logoutHandler);\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        userId: userId, \r\n        isLoggedIn: userIsLoggedIn, \r\n        login: loginHandler, \r\n        logout: logoutHandler\r\n    };\r\n\r\n    return(\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;","import React, { useState } from 'react';\r\n\r\nconst UserContext = React.createContext({\r\n  accountBalance: 100000,\r\n  userName: '',\r\n  login: () => {},\r\n  logout: () => {}\r\n});\r\n\r\nconst retrieveUserData = () => {\r\n  const storedBalance = localStorage.getItem('accountBalance');\r\n  const storedUser = localStorage.getItem('userName');\r\n\r\n  return {\r\n    accountBalance: storedBalance,\r\n    userName: storedUser\r\n  };\r\n};\r\n\r\nexport const UserContextProvider = (props) => {\r\n  const userData = retrieveUserData();\r\n  let initialUserName;\r\n  let initialBalance = 100000;\r\n\r\n  userData\r\n    ? (initialUserName = userData.userName)\r\n    : (initialUserName = undefined);\r\n  userData\r\n    ? (initialBalance = userData.accountBalance)\r\n    : (initialBalance = undefined);\r\n\r\n  const [accountBalance, setAccountBalance] = useState(initialBalance);\r\n  const [userName, setUserName] = useState(initialUserName);\r\n\r\n  const loginHandler = (balance, name) => {\r\n    setAccountBalance(balance);\r\n    setUserName(name);\r\n    localStorage.setItem('userName', name);\r\n    localStorage.setItem('accountBalance', balance);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setAccountBalance(null);\r\n    setUserName(null);\r\n    localStorage.removeItem('userName');\r\n    localStorage.removeItem('accountBalance');\r\n  };\r\n\r\n  const contextValue = {\r\n    accountBalance: accountBalance,\r\n    userName: userName,\r\n    login: loginHandler,\r\n    logout: logoutHandler\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContext;\r\n","module.exports = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2\r\n});\r\n\r\n"],"mappings":"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AAAA;AAAA;AAAA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAmCA;AACA;AADA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AAIA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAIA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAvCA;AAAA;AAAA;AAAA;AAAA;AA0DA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC1MA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAXA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAAA;;;;;;;;;;;;ACvBA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACZA;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;;;;;;;;;AClGA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAEA;;;;;;;;;;;AC9DA;AACA;AACA;AACA;AAHA;;;;;;;;;;;;;;;;;A","sourceRoot":""}